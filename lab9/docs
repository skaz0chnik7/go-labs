
### Документация API

1. Получение списка пользователей (GET /users):
Метод: GET
Описание: Возвращает список всех пользователей в формате JSON.
Пример запроса:
   curl http://localhost:8080/users

Пример ответа:
[
    {
        "id": 14,
        "name": "Alice",
        "age": 20
    },
    ...
]

2. Получение информации о конкретном пользователе (GET /users/{id}):
Метод: GET
Описание: Возвращает информацию о пользователе с указанным ID.
Параметры:
   - id: идентификатор пользователя (целое число)
Пример запроса:
   curl http://localhost:999/users/14

Пример ответа:
{
    "id": 14,
    "name": "Alice",
    "age":20
}

3. Добавление нового пользователя (POST /users):
Метод: POST
Описание: Создает нового пользователя и возвращает его данные.
Ожидаемый формат данных (JSON):
{
    "name": "имя пользователя",
    "age": возраст пользователя
}
Пример запроса:
   curl -X POST -H "Content-Type: application/json" -d '{"name":"Sophia", "age":20}' http://localhost:999/users

Пример ответа:
{
    "id": 15,
    "name": "Sophia",
    "age": 35
}

4. Обновление информации о пользователе (PUT /users/{id}):
Метод: PUT
Описание: Обновляет данные о пользователе с указанным ID.
Параметры:
   - id: идентификатор пользователя (целое число)
Ожидаемый формат данных (JSON):
{
    "name": "обновленное имя пользователя",
    "age": обновленный возраст пользователя
}
Пример запроса:
   curl -X PUT -H "Content-Type: application/json" -d '{"name":"Alice Updated", "age":40}' http://localhost:5252/users/1

Пример ответа:
{
    "id": 14,
    "name": "Alice Updated",
    "age": 40
}

5. Удаление пользователя (DELETE /users/{id}):
Метод: DELETE
Описание: Удаляет пользователя с указанным ID.
Параметры:
   - id: идентификатор пользователя (целое число)
Пример запроса:
   curl -X DELETE http://localhost:999/users/15

Пример ответа:
HTTP/1.1 204 No Content
